<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.honghao.cloud.message.domain.mapper.MsgInfoMapper">
  <resultMap id="BaseResultMap" type="com.honghao.cloud.message.domain.entity.MsgInfo">
    <id column="msg_id" jdbcType="BIGINT" property="msgId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="retry_time" jdbcType="TINYINT" property="retryTime" />
    <result column="topic" jdbcType="VARCHAR" property="topic" />
    <result column="delay" jdbcType="INTEGER" property="delay" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    msg_id, content, status,retry_time, topic, delay
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from msg_info
    where msg_id = #{msgId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from msg_info
    where msg_id = #{msgId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.honghao.cloud.message.domain.entity.MsgInfo">
    insert into msg_info (msg_id, content, status, 
      topic, delay, create_time
      )
    values (#{msgId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{topic,jdbcType=VARCHAR}, #{delay,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.honghao.cloud.message.domain.entity.MsgInfo">
    insert into msg_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="msgId != null">
        msg_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="topic != null">
        topic,
      </if>
      <if test="delay != null">
        delay,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="msgId != null">
        #{msgId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="topic != null">
        #{topic,jdbcType=VARCHAR},
      </if>
      <if test="delay != null">
        #{delay,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.honghao.cloud.message.domain.entity.MsgInfo">
    update msg_info
    <set>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="topic != null">
        topic = #{topic,jdbcType=VARCHAR},
      </if>
      <if test="delay != null">
        delay = #{delay,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where msg_id = #{msgId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.honghao.cloud.message.domain.entity.MsgInfo">
    update msg_info
    set content = #{content,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      topic = #{topic,jdbcType=VARCHAR},
      delay = #{delay,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where msg_id = #{msgId,jdbcType=BIGINT}
  </update>

    <select id="selectByStatus" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from msg_info
        where status in (0,1,2)
    </select>

    <update id="updateBatch" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            UPDATE msg_info
            SET create_time = now(),
            status =#{item.status},
            retry_time =#{item.retryTime},
            WHERE
            msg_id=#{item.msgId}
        </foreach>

    </update>
</mapper>